@model OnBalance.ViewModels.Categories.CategoryStructureViewModel

@{
    ViewBag.Title = "Edit category";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Html.ResourceManager()
        .AddJsFile("http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js")
        .AddJsLibrary(OnBalance.Helpers.HtmlResourcesAggregator.Libraries.UnobtrusiveMvc, "", OnBalance.Helpers.HtmlResourcesAggregator.ScriptFormats.Min, OnBalance.Helpers.HtmlResourcesAggregator.Cdns.Microsoft)
        .AddJsFile("~/scripts/category.js");

    var ajaxOptions = new AjaxOptions
    {
        HttpMethod = "POST",
        LoadingElementId = "LoadingDiv",
        UpdateTargetId = "DynamicDiv",
        OnFailure = "alert('Error saving Category structure!');"
    };
}

<div class="container">
    <ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>
            @Html.ActionLink(OnBalance.Core.MyConstants.Name, "index", "home")
            <span class="divider">\</span>
        </li>
        <li>@ViewBag.Title</li>
    </ul>

    <table class="table">
        <tr>
            <td>@Model.Category.Name</td>
            <td>@Model.Category.StatusId</td>
        </tr>
    </table>

    @using (Ajax.BeginForm("dosave", ajaxOptions) )
    {
        @Html.HiddenFor(x => x.Category.Id)
        
        @*@Html.EditorFor(x => Model.Category.CategoryTypeId, "CategoryTypeId")*@

        <div id="LoadingDiv" style="display: none;">loading</div>
        
        @Html.EditorFor(x => Model.Category)

        <div id="DynamicDiv">
            @Html.Partial("CategoryStructure", Model.Category)
        </div>
        
        @*<table class="table table-hover table-bordered table-condensed table-striped">
            <caption>
                Parameters of category @Model.Category.Name</caption>
            <thead>
                <tr>
                    <th>
                        Status
                    </th>
                    <th>
                        Name
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach(var item in Model.Category.Structure)
                {
                    <tr>
                        <td>
                            <span class="label@(item.StatusId == (byte)OnBalance.Status.Approved ? " label-success" : "")">@item.StatusName</span>
                        </td>
                        <td>@Html.EditorFor(x => item.FieldName)
                        </td>
                    </tr>
                }
                <tr class="info">
                    <td>
                    </td>
                    <td>@Html.Editor("New[FieldName]")
                    </td>
                </tr>
            </tbody>
        </table>*@
        <div class="btn-group">
            @Html.ActionLink(OnBalance.MyMessages.ButtonText.BackToList, "list", new { id = Model.Category.OrganizationId }, new { @class = "btn btn-mini" })
            <button class="btn btn-mini btn-primary"><i class="icon-ok icon-white"></i> @OnBalance.MyMessages.ButtonText.Save</button>
            @if(Model.Category.CategoryTypeId != 1)
            {
                <button onclick="Category.resetStructure(@Model.Category.Id, @Model.Category.CategoryTypeId); return false;" class="btn btn-mini btn-danger"><i class="icon-exclamation-sign icon-white"></i> @OnBalance.MyMessages.ButtonText.Reset</button>
            }
        </div>
        
    }

</div>

<script type="text/javascript">

    window.onload = function () {
        Category.init(@Model.Category.Id, @Model.Category.CategoryTypeId);
    }

</script>
