@model OnBalance.ViewModels.Products.ProductsInPosViewModel
@{
    ViewBag.Title = "Balance";
    Layout = null;
    
    var pendingChanges = new OnBalance.ViewModels.PendingChangesViewModel();
    var sb = new System.Text.StringBuilder();
}
<html>
<head>
<style>
		
	/*margin and padding on body element can introduce errors in determining element position and are not recommended; we turn them off as a foundation for YUI CSS treatments. */
	body {
		margin:0;
		padding:0;
	}

	.yui-skin-sam .yui-dt-col-address pre { font-family:arial;font-size:100%; } /* Use PRE in first col to preserve linebreaks*/

    #example {
        height:30em;
    }

    label {
        display:block;
        float:left;
        width:45%;
        clear:left;
    }

    .clear {
        clear:both;
    }

    #resp {
        margin:10px;
        padding:5px;
        border:1px solid #ccc;
        background:#fff;
    }

    #resp li {
        font-family:monospace
    }

    .yui-pe .yui-pe-content {
        display:none;
    }

</style>


    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/button/assets/skins/sam/button.css" />
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/container/assets/skins/sam/container.css" />
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/fonts/fonts-min.css" />
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/datatable/assets/skins/sam/datatable.css">
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/menu/assets/skins/sam/menu.css">
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/combo?2.9.0/build/button/assets/skins/sam/button.css">
    
    <script src="http://yui.yahooapis.com/2.9.0/build/yuiloader/yuiloader-min.js"></script>

</head>
<body>


<script type="text/javascript">
    document.documentElement.className = "yui-pe";
</script>


<script type="text/javascript">

    YAHOO.OnBalance = {
        localChanges: [],
        availableCellColors: [],
        products: [
            @foreach(var p in Model.Products)
            {

                sb.Clear();
                @*foreach(var kvp in p.GetQuantityForAllSizes())
                {
                    sb.AppendFormat(", '{0}': {1}", kvp.Key, kvp.Value);
                }

                @Html.Raw(string.Format("{{ name: \"{0}\", code: \"{1}\", price_minor: '{2}', amount: {3} {4} }},", p.Name, p.InternalCode, p.Price, 0, sb.ToString()))*@
            }
        ]
    };

    YAHOO.Namespace("OnBalance.container");

    YAHOO.util.Event.onDOMReady(function () {

        InitializeTable();

        // Define various event handlers for Dialog
        var handleSubmit = function() {
            this.submit();
        };
        var handleCancel = function() {
            this.cancel();
        };
        var handleSuccess = function(o) {
            var response = o.responseText;
            response = response.split("<!")[0];
            document.getElementById("resp").innerHTML = response;
        };
        var handleFailure = function(o) {
            alert("Submission failed: " + o.status);
        };
        var formatLocalChangesForSubmit = function()
        {
            console.log("Local changes:");
            console.log(YAHOO.OnBalance.localChanges);
            var s = "";
            for(var i = 0; i < YAHOO.OnBalance.localChanges.length; i++)
            {
                s += "<label>" + YAHOO.OnBalance.localChanges[i].Name + ", " + YAHOO.OnBalance.localChanges[i].Price + "</label>";
                s += "<input type='hidden' name='[" + i + "].InternalCode' value='" + YAHOO.OnBalance.localChanges[i].code + "' />";
                s += "<input type='hidden' name='[" + i + "].ProductName' value='" + YAHOO.OnBalance.localChanges[i].Name + "' />";
                s += "<input type='hidden' name='[" + i + "].Price' value='" + YAHOO.OnBalance.localChanges[i].Price + "' />";
            }
            return s;
        }
        var displayPendingChangesDialog = function(o)
        {
            console.log("Displaying pending changes...");
            var dlg = YAHOO.OnBalance.container.dialog1;
            var s = YAHOO.OnBalance.localChanges.length > 0 ? "" : "@OnBalance.MyMessages.Balancer.NoPendingLocalChanges";
//            for( var i = 0; i < gLocalChanges.length; i++ )
//            {
//                s += "<label>" + gLocalChanges[i].Name + ", " + gLocalChanges[i].Price + "</label>";
//                s += "<input type='hidden' name='[" + i + "].InternalCode' value='" + gLocalChanges[i].code + "' />";
//                s += "<input type='hidden' name='[" + i + "].ProductName' value='" + gLocalChanges[i].Name + "' />";
//                s += "<input type='hidden' name='[" + i + "].Price' value='" + gLocalChanges[i].Price + "' />";
//            }
            document.getElementById("PendingChangesDiv").innerHTML = formatLocalChangesForSubmit();
            dlg.show();
        }

        // Remove progressively enhanced content class, just before creating the module
        YAHOO.util.Dom.removeClass("dialog1", "yui-pe-content");

        // Instantiate the Dialog
        YAHOO.OnBalance.container.dialog1 = new YAHOO.widget.Dialog("dialog1",
                { width:"30em",
                    fixedcenter: true,
                    visible: false,
                    constraintoviewport: true,
                    buttons:[
                        { text:"Submit", handler:handleSubmit, isDefault:true },
                        { text:"Cancel", handler:handleCancel }
                    ]
                });

        // Wire up the success and failure handlers
        YAHOO.OnBalance.container.dialog1.callback = {
            success: handleSuccess,
            failure: handleFailure
        };

        // Render the Dialog
        YAHOO.OnBalance.container.dialog1.render();

        YAHOO.util.Event.addListener("ShowRemotePending", "click", displayPendingChangesDialog, YAHOO.OnBalance.container.dialog1, true);
        YAHOO.util.Event.addListener("hide", "click", YAHOO.OnBalance.container.dialog1.hide, YAHOO.OnBalance.container.dialog1, true);
    });


</script>

<body class="yui-skin-sam" style="margin: 0;">

    <div id="TopDiv">
        <fieldset id="idToolbar" class="myToolbar" style="border: 0;">
            <span id="CurrentPath">GJ</span>
        </fieldset>
    </div>
    <div id="CenterDiv">
        <div id="MainBalanceDiv"></div>
		<div id="CurrentProductName"></div>
    </div>
    <div id="BottomDiv"><span id="DivStatus">Status : </span></div>


    <div id="RemoteChangesDialog" style="width: 30em;">
        <div class="hd">Remote changes</div>
		<div class="bd">
			<div id="RemoteChangesTable"></div>
		</div>
	</div>
    <div id="LocalChangesDialog" style="width: 30em;">
        <div class="hd">Local changes</div>
        <div class="bd">
        </div>
    </div>


    <div id="OnBalanceContextMenu"></div>


    <script type="text/javascript">

        window.onload = function ()
        {
            var loader = new YAHOO.util.YUILoader({
                require: ["datatable", "menu", "datasource", "json", "container", "connection", "button", "layout"]
            , onSuccess: function ()
            {

                var layout = new YAHOO.widget.Layout({
                    units: [
                        { position: "top", body: "TopDiv", height: 50, gutter: "0 0 0 0" },
                        { position: "center", body: "CenterDiv", scroll: true, gutter: "0 0 0 0" },
                        { position: "bottom", body: "BottomDiv", height: 30, gutter: "0 0 0 0" }
                    ]
                });

                layout.on('render', function ()
                {
                    onPageLoaded();
                });

                layout.render();

                //                onPageLoaded();
            }
            });

            loader.insert();

        }

</script>
<script src="@Url.Content("~/scripts/balance.js")"></script>

</body>
</html>



