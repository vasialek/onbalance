@model OnBalance.Models.Product
           
@{
    
    List<SelectListItem> shops = new List<SelectListItem>
    {
        new SelectListItem
        {
            Text = "Choose",
            Value = "0",
            Selected = true
        }
    };

    //throw new Exception("Ninject OrganizationRepository()");
    //new OnBalance.Models.OrganizationRepository()
    //    .Companies
    //    .ToList()
    //    .ForEach(x => shops.Add(new SelectListItem
    //    {
    //        Text = x.Name,
    //        Value = x.Id.ToString(),
    //        Selected = Model.PosId > 0 ? x.Equals(Model.PosId) : false
    //    }));
    
}

@Html.HiddenFor(model => model.Id)

<div class="editor-label">
    @Html.LabelFor(model => model.StatusId)
</div>
<div class="editor-field">
    @Html.StatusDropDownList((OnBalance.Status)Model.StatusId)
    @Html.ValidationMessageFor(model => model.StatusId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.PosId)
</div>
<div class="editor-field">
    @Html.DropDownListFor(x => x.PosId, shops)
    @Html.ValidationMessageFor(model => model.PosId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.InternalCode)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.InternalCode)
    @Html.ValidationMessageFor(model => model.InternalCode)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.UserId)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.UserId)
    @Html.ValidationMessageFor(model => model.UserId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Price)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Price)
    @Html.ValidationMessageFor(model => model.Price)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CreatedAt)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CreatedAt)
    @Html.ValidationMessageFor(model => model.CreatedAt)
</div>

@*@foreach(var s in Model.ProductDetails)
{
    int idx = Model.ProductDetails.IndexOf(s);
    <div style="padding-left: 20px;">@Html.EditorFor(x => Model.ProductDetails[idx])</div>
}*@